#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef double db;
#define max(a, b) ((a) > (b) ? (a) : (b))
#define min(a, b) ((a) < (b) ? (a) : (b))
#define LNF 1e18
#define INF 0x7fffffff
#define int long long
#define lowbit(x) ((x) & (-x))
#define abs(x) llabs(x)
#define endl '\n'
#define Y() cout << "Yes" << endl
#define N() cout << "No" << endl
const db eps = 1e-9;
const int mod = 1e9 + 7;
const int MAXN = 600005;
int n, dp[101], k, f[101];
int q = 100;
struct M
{
    int m[105][105];
    inline void init()
    {
        memset(m, 0, sizeof(m));
    }
    inline M operator*(const M &o) const
    {
        M p;
        p.init();
        for (int k = 1; k <= q; ++k)
            for (int i = 1; i <= q; ++i)
                for (int j = 1; j <= q; ++j)
                    p.m[i][j] = (p.m[i][j] + 1ll * m[i][k] * o.m[k][j] % mod) % mod;
        return p;
    }
} a, b;
inline M qpow(M x, ll y)
{
    M p;
    for (int i = 1; i <= q; ++i)
        p.m[i][i] = 1;
    while (y)
    {
        if (y & 1)
            p = p * x;
        y >>= 1;
        x = x * x;
    }
    return p;
}
void solve()
{
    cin >> n >> k;
    set<int> st;
    for (int i = 1; i <= n; i++)
    {
        int t;
        cin >> t;
        st.insert(t);
    }
    dp[0] = 1;
    for (auto &i : st)
        f[i] = 1;
    for (int i = 1; i <= 100; i++)
    {
        for (int j = 1; j <= i; j++)
        {
            dp[i] += f[j] * dp[i - j];
            dp[i] %= mod;

        } // if(dp[i]!=0){
          // cout << i << " " << dp[i] << endl;
        //}
    }
    if (k <= 100)
    {
        cout << dp[k] << endl;
        return;
    }
    for (int i = 1; i <= 100; i++)
    {
        b.m[1][i] = f[i];
        a.m[100 - i + 1][1] = dp[i];
    }
    for (int i = 1; i <= 99; i++)
    {
        b.m[i + 1][i] = 1;
    }
    cout << (qpow(b, k - 100) * a).m[1][1] << endl;
}
signed main()
{
    std::ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    //freopen("8.in","r",stdin);
    int T = 1;
    // cout << fixed << setprecision(9);
    //  cin >> T;
    while (T--)
        solve();
    return 0;
}