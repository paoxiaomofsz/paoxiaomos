#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef double db;
#define max(a, b) ((a) > (b) ? (a) : (b))
#define min(a, b) ((a) < (b) ? (a) : (b))
#define LNF 1e18
#define INF 0x7fffffff
#define int long long
#define lowbit(x) ((x) & (-x))
#define abs(x) llabs(x)
#define endl '\n'
#define Y() cout << "Yes" << endl
#define N() cout << "No" << endl
const db eps = 1e-9;
const int mod = 998244353;
const int MAXN = 2e5 + 5;
int n;
string s;
bool check(int mid){
    int num = 0,d=0,xue=30;
    for (int i = 1; i <= n;i++){
        if(s[i]=='0'&&num<mid){
            d++;
            if(d==2){
                xue += 4;
                d = 0;
                num++;
            }else{
                xue -= 2;
                if (xue <= 0)
                    return 0;
            }
        }else if(s[i]=='0'){
            d++;
            if(d%2==1){
                xue -= 2;
                if(xue<=0)
                    return 0;
            }
                
            
        }else{
            xue -= 6;
            if(xue<=0)
                return 0;
        }            
    }
    return 1;
}
void solve(){
    cin >> n ;
    if(n==0){
        cout << 0 << endl;
        return;
    }
    cin >> s;
    s = " " + s;
    int num1 = count(s.begin(), s.end(), '0');
    int l = 0, r = num1/2;
    while (l <= r) {
        int mid = l + r >> 1;
        if (check(mid))
            r = mid - 1;
        else
            l = mid + 1;

    }
    if(l>num1/2){
        cout << "OH!WTMDCL" << endl;
    }else{
        cout << (num1/ 2-l ) * 3 << endl;
        
    }
    
}
signed main()
{
    std::ios::sync_with_stdio(false);cin.tie(nullptr);
    int T = 1;
    //cin >> T;
    //freopen("11.in", "r", stdin);
    while (T--) solve();
    return 0;
}